package com.example.fyprojectnew;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;
import android.annotation.SuppressLint;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.Toast;

//import com.gkemon.XMLtoPDF.PdfGenerator;
//import com.gkemon.XMLtoPDF.PdfGeneratorListener;
//import com.gkemon.XMLtoPDF.model.FailureResponse;
//import com.gkemon.XMLtoPDF.model.SuccessResponse;

import sharelayoutbyamit.example.sharelibrary.ShareLayout;

public class PayrollSlipTemp extends AppCompatActivity {
    ScrollView sliplayout;

    @SuppressLint("MissingInflatedId")
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_payroll_slip_temp);
        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
        getSupportActionBar().setTitle("Pay Slip");
        sliplayout = (ScrollView) findViewById(R.id.sliplayout);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.actions_toolbar, menu);
        MenuItem menuItem = menu.findItem(R.id.option);
        MenuItem menuItem1 = menu.findItem(R.id.share);
        MenuItem menuItem2 = menu.findItem(R.id.download);
        return super.onCreateOptionsMenu(menu);
    }

    @Override
    public boolean onOptionsItemSelected(@NonNull MenuItem item) {
        if (item.getItemId() == R.id.option) {
            startActivity(new Intent(PayrollSlipTemp.this, CheckGenerate.class));
        } else if (item.getItemId() == R.id.share) {
            ShareLayout.simpleLayoutShare(PayrollSlipTemp.this, sliplayout, "");
        } else if (item.getItemId() == R.id.download) {
            Log.d("Msg", "Error");
//            PdfGenerator.getBuilder()
//                    .setContext(PayrollSlipTemp.this)
//                    .fromLayoutXMLSource()
//                    .fromLayoutXML(R.layout.activity_payroll_slip_temp, R.layout.activity_payroll_slip_temp)
//                    /* "fromLayoutXML()" takes array of layout resources.
//                     * You can also invoke "fromLayoutXMLList()" method here which takes list of layout resources instead of array. */
//                    .setFileName("Test-PDF")
//                    /* It is file name */
//                    .actionAfterPDFGeneration(PdfGenerator.ActionAfterPDFGeneration.SHARE)
//                    /*If you want to save your pdf in shared storage (where other apps can also see your pdf even after the app is uninstall).
//                     * You need to pass an xmt to pdf lifecycle observer by the following method. To get complete overview please see the MainActivity of 'sample' folder */
//                    .build(new PdfGeneratorListener() {
//                        @Override
//                        public void onFailure(FailureResponse failureResponse) {
//                            super.onFailure(failureResponse);
//                            /* If pdf is not generated by an error then you will findout the reason behind it
//                             * from this FailureResponse. */
//                        }
//
//                        @Override
//                        public void onStartPDFGeneration() {
//                            /*When PDF generation begins to start*/
//                        }
//
//                        @Override
//                        public void onFinishPDFGeneration() {
//                            /*When PDF generation is finished*/
//                        }
//
//                        @Override
//                        public void showLog(String log) {
//                            super.showLog(log);
//                            /*It shows logs of events inside the pdf generation process*/
//                        }
//
//                        @Override
//                        public void onSuccess(SuccessResponse response) {
//                            super.onSuccess(response);
//                            /* If PDF is generated successfully then you will find SuccessResponse
//                             * which holds the PdfDocument,File and path (where generated pdf is stored)*/
//
//                        }
//                    });
//            PdfGenerator.getBuilder()
//                    .setContext(PayrollSlipTemp.this)
//                    .fromLayoutXMLSource()
//                    .fromLayoutXML(R.layout.activity_payroll_slip_temp,R.layout.activity_payroll_slip_temp)
//                    /* "fromLayoutXML()" takes array of layout resources.
//                     * You can also invoke "fromLayoutXMLList()" method here which takes list of layout resources instead of array. */
//                    .setDefaultPageSize(PdfGenerator.PageSize.A4)
//                    /* It takes default page size like A4,A5. You can also set custom page size in pixel
//                     * by calling ".setCustomPageSize(int widthInPX, int heightInPX)" here. */
//                    .setFileName("Test-PDF")
//                    /* It is file name */
//                    .setFolderName("FolderA/FolderB/FolderC")
//                    /* It is folder name. If you set the folder name like this pattern (FolderA/FolderB/FolderC), then
//                     * FolderA creates first.Then FolderB inside FolderB and also FolderC inside the FolderB and finally
//                     * the pdf file named "Test-PDF.pdf" will be store inside the FolderB. */
//                    .openPDFafterGeneration(true)
//                    /* It true then the generated pdf will be shown after generated. */
//                    .build(new PdfGeneratorListener() {
//                        @Override
//                        public void onFailure(FailureResponse failureResponse) {
//                            super.onFailure(failureResponse);
//                            /* If pdf is not generated by an error then you will findout the reason behind it
//                             * from this FailureResponse. */
//                        }
//
//                        @Override
//                        public void showLog(String log) {
//                            super.showLog(log);
//                            /*It shows logs of events inside the pdf generation process*/
//                        }
//
//                        @Override
//                        public void onStartPDFGeneration() {
//
//                        }
//
//                        @Override
//                        public void onFinishPDFGeneration() {
//
//                        }
//
//                        @Override
//                        public void onSuccess(SuccessResponse response) {
//                            super.onSuccess(response);
//                            /* If PDF is generated successfully then you will find SuccessResponse
//                             * which holds the PdfDocument,File and path (where generated pdf is stored)*/
//
//                        }
//                    });

            return super.onOptionsItemSelected(item);
        }
        return false;
    }

    @Override
    public boolean onSupportNavigateUp() {
        onBackPressed();
        return super.onSupportNavigateUp();
    }
}